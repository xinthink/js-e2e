extends: eslint:recommended
env:
  es6: true
  commonjs: true
  node: false
  browser: false
  jest: true
plugins:
  - "@typescript-eslint" # npm install --save-dev @typescript-eslint/eslint-plugin
  - "eslint-plugin-es" # npm install --save-dev eslint-plugin-es
globals:
  clearTimeout: true
  clearInterval: true
  console: true
  globalThis: true
  setTimeout: true
  setInterval: true
parserOptions:
  ecmaVersion: 2022
  sourceType: module
rules:
  no-restricted-globals:
    - error
    - escape
    - unescape
    - eval
  no-restricted-modules:
    - error
    - assert
    - async_hooks
    - buffer
    - child_process
    - cluster
    - console
    - constants
    - crypto
    - dgram
    - diagnostics_channel
    - dns
    - domain
    - events
    - fs
    - http
    - http2
    - https
    - inspector
    - module
    - net
    - os
    - path
    - perf_hooks
    - process
    - punycode
    - querystring
    - readline
    - repl
    - stream
    - string_decoder
    - test
    - timers
    - tls
    - trace_events
    - tty
    - url
    - util
    - v8
    - vm
    - wasi
    - worker_threads
    - zlib

  ##################### Possible Errors #####################
  getter-return: off # 强制 getter 函数中出现 return 语句
  no-async-promise-executor: off # 禁止使用异步函数作为 Promise executor
  no-await-in-loop: off # 禁止在循环中出现 await
  no-compare-neg-zero: off # 禁止与 -0 进行比较
  no-cond-assign: off # 禁止条件表达式中出现赋值操作符
  no-console: off # 禁用 console
  no-constant-condition: off # 禁止在条件中使用常量表达式
  no-control-regex: off # 禁止在正则表达式中使用控制字符(ASCII 0-31范围内的控制字符，这些是特殊的、不可见的字符。)
  no-debugger: off # 禁用 debugger
  no-dupe-args: off # 禁止 function 定义中出现重名参数
  no-dupe-keys: off # 禁止对象字面量中出现重复的 key
  no-duplicate-case: off # 禁止出现重复的 case 标签
  no-empty: off # 禁止出现空语句块
  no-empty-character-class: off # 禁止在正则表达式中使用空字符集
  no-ex-assign: off # 禁止对 catch 子句的参数重新赋值
  no-extra-boolean-cast: off # 禁止不必要的布尔转换
  no-extra-parens: off # 禁止不必要的括号
  no-extra-semi: off # 禁止不必要的分号
  no-func-assign: off # 禁止对 function 声明重新赋值
  no-inner-declarations: off # 禁止在嵌套的块中出现变量声明或 function 声明
  no-invalid-regexp: off # 禁止 RegExp 构造函数中存在无效的正则表达式字符串
  no-irregular-whitespace: off # 禁止不规则的空白
  no-misleading-character-class: off # 不允许在字符类语法中出现由多个代码点组成的字符
  no-obj-calls: off # 禁止把全局对象作为函数调用
  no-prototype-builtins: off # 禁止直接调用 Object.prototypes 的内置属性
  no-regex-spaces: off # 禁止正则表达式字面量中出现多个空格
  no-sparse-arrays: off # 禁用稀疏数组
  no-template-curly-in-string: off # 禁止在常规字符串中出现模板字面量占位符语法
  no-unexpected-multiline: off # 禁止出现令人困惑的多行表达式
  no-unreachable: off # 禁止在 return、throw、continue 和 break 语句之后出现不可达代码
  no-unsafe-finally: off # 禁止在 finally 语句块中出现控制流语句
  no-unsafe-negation: off # 禁止对关系运算符的左操作数使用否定操作符
  require-atomic-updates: off # 禁止由于 await 或 yield的使用而可能导致出现竞态条件的赋值
  use-isnan: off # 要求使用 isNaN() 检查 NaN
  valid-typeof: off # 强制 typeof 表达式与有效的字符串进行比较

  ##################### Best Practices #####################
  no-case-declarations: off # 禁止 if 语句中 return 语句之后有 else 块
  no-empty-pattern: off # 禁止使用空解构模式
  no-fallthrough: off # 禁止 case 语句落空
  no-global-assign: off # 禁止对原生对象或只读的全局对象进行赋值
  no-octal: off # 禁用八进制字面量
  no-redeclare: off # 禁止多次声明同一变量
  no-self-assign: off # 禁止自我赋值
  no-unused-labels: off # 禁用出现未使用过的标
  no-useless-catch: off # 禁止不必要的 catch 子句
  no-useless-escape: off # 禁用不必要的转义字符
  no-with: off # 禁用 with 语句

  ##################### Best Practices #####################
  no-delete-var: off # 禁止删除变量
  no-shadow-restricted-names: off # 禁止将标识符定义为受限的名字
  # no-undef: off # 禁用未声明的变量，除非它们在 /*global */ 注释中被提到
  no-unused-vars: off # 禁止出现未使用过的变量

  ##################### Stylistic Issues #####################
  no-mixed-spaces-and-tabs: off # 禁止空格和 tab 的混合缩进

  ##################### ECMAScript 6 #####################
  constructor-super: off # 要求在构造函数中有 super() 的调用
  no-class-assign: off # 禁止修改类声明的变量
  no-const-assign: off # 禁止修改 const 声明的变量
  no-dupe-class-members: off # 禁止类成员中出现重复的名称
  no-new-symbol: off # 禁止 Symbolnew 操作符和 new 一起使用
  no-this-before-super: off # 禁止在构造函数中，在调用 super() 之前使用 this 或 super
  require-yield: off # 要求 generator 函数内有 yield

  ##################### Other #####################
  no-loss-of-precision: off # 数据精度丢失
